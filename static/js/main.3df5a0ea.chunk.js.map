{"version":3,"sources":["components/Text.js","components/Manual.js","App.js","reportWebVitals.js","index.js"],"names":["Text","Manual","className","Box","useBox","mass","position","ref","api","onClick","velocity","set","onTouch","attach","color","Plane","props","usePlane","rotation","Math","PI","args","App","useEffect","z","document","querySelector","style","border","setTimeout","OrbitControls","Stars","intensity","angle","Cloud","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sOAeeA,MAZf,WACC,OACQ,gCACI,8DACA,6BAAI,4DCYFC,MAjBf,WACC,OACS,qBAAKC,UAAY,MAAjB,SACE,+BACG,mDACA,gFACA,8DCAf,SAASC,IAEL,MAAmBC,aAAO,WACtB,MAAO,CACHC,KAAM,EACNC,SAAU,CAAC,EAAG,GAAI,OAH1B,mBAAOC,EAAP,KAAYC,EAAZ,KAQA,OAEI,uBAAMC,QAAY,WAEbD,EAAIE,SAASC,IAAI,GAAI,EAAE,KAGzBC,QAAY,WAEVJ,EAAIE,SAASC,IAAI,GAAI,EAAE,KAGzBJ,IAAOA,EAAKD,SAAa,CAAC,EAAE,GAAG,GAVlC,UAWI,mCAAmBO,OAAQ,aAC1B,qCAAqBA,OAAO,WAAWC,MAAM,YAQ1D,SAASC,EAAMC,GAEX,MAAmBC,aAAS,WAExB,MAAO,CACHC,SAAU,EAAEC,KAAKC,GAAK,EAAG,EAAG,OAHpC,6BAQA,OACI,uBAAOlB,UAAU,QAASgB,SAAY,EAAEC,KAAKC,GAAG,EAAG,EAAG,GAAtD,UACI,qCAAqBP,OAAQ,WAAWQ,KAAQ,CAAC,GAAG,MACnD,qCAAqBR,OAAO,WAAWC,MAAM,YAQ3C,SAASQ,IAiBpB,OAdAC,qBAAU,WACN,IAAIC,EAAIC,SAASC,cAAc,QAE/BF,EAAEG,MAAMC,OAAS,SACjBC,YAAW,WAEPL,EAAEG,MAAMC,OAAS,SAElB,SAQH,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,eAAC,IAAD,CAAQ1B,UAAW,MAAnB,UAEA,cAAC4B,EAAA,EAAD,IAEE,cAACC,EAAA,EAAD,IAEF,8BAAeC,UAAa,KAE5B,2BACE1B,SAAY,CAAC,GAAG,GAAG,IAAM2B,MAAO,KAGhC,eAAC,IAAD,WACC,cAACC,EAAA,EAAD,CAAO5B,SAAY,CAAC,EAAE,GAAG,KACxB,cAACH,EAAD,IACA,cAACY,EAAD,aClGhB,IAYeoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACxB,EAAD,MAEFG,SAASsB,eAAe,SAU1BZ,M","file":"static/js/main.3df5a0ea.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction Text() {\r\n\treturn (\r\n         <div>\r\n             <h2>crated by Serhii Bondarchuk!</h2> \r\n             <h4><em> amax9111@gmail.com </em></h4>\r\n  \r\n\r\n          </div>\r\n\r\n\t\t)\r\n}\r\n\r\nexport default Text","import React from 'react'\r\n\r\nfunction Manual() {\r\n\treturn (\r\n          <div className = 'man' >\r\n            <ul>\r\n               <li>1. use Scroling  </li>\r\n               <li>2. chenge Direction (press button and move)   </li>\r\n               <li>3. press on the Cube  </li>\r\n\r\n\r\n            </ul>\r\n   \r\n\r\n          </div>\r\n\r\n\t\t)\r\n}\r\n\r\nexport default Manual","import React, { useEffect } from 'react'\nimport { Canvas } from \"react-three-fiber\";\nimport { OrbitControls, Stars, Cloud, RoundedBox } from '@react-three/drei';\nimport { Physics, useBox, usePlane } from '@react-three/cannon'\n\nimport Text from './components/Text'\nimport Manual from './components/Manual'\n\nfunction Box() {\n\n    const [ref, api] = useBox(() => {\n        return {\n            mass: 1,\n            position: [0, 10, 0]\n        }\n    })\n\n\n    return (\n\n        <mesh onClick = { () => {\n                      \n             api.velocity.set(0.1,5,0.1)\n         } }\n           \n           onTouch = { () => {\n                      \n             api.velocity.set(0.1,5,0.1)\n         } }\n\n           ref = {ref} position = { [0,10,0]}  >\n            <boxBufferGeometry attach =\"geometry\"  />\n             <meshLambertMaterial attach=\"material\" color=\"gold\"  />                         \n\n         </mesh>\n\n    )\n}\n\n\nfunction Plane(props) {\n\n    const [ref, api] = usePlane(() => {\n\n        return {\n            rotation: [-Math.PI / 2, 0, 0]\n        }\n    })\n\n\n    return (\n        <mesh  className='plane'  rotation = {[-Math.PI/2, 0, 0 ]} >\n            <planeBufferGeometry attach =\"geometry\" args = {[15,15]} />\n             <meshLambertMaterial attach=\"material\" color=\"blue\"   />                         \n         \n         </mesh>\n\n    )\n}\n\n\nexport default function App() {\n\n\n    useEffect(() => {\n        let z = document.querySelector('.can')\n\n        z.style.border = 'dashed'\n        setTimeout(() => {\n\n            z.style.border = 'none'\n\n        }, 12000)\n\n    })\n\n\n\n    return (\n\n        <div>\n            <Text />\n            <Manual  /> \n            <Canvas className ='can'  >\n       \n            <OrbitControls   />\n            \n              <Stars />\n           \n            <ambientLight  intensity = {0.5}  />\n \n            <spotLight\n              position = {[10,15,10]}  angle={0.9}/>\n\n         \n              <Physics>\n               <Cloud position = {[7,12,0]} />\n                <Box   />\n                <Plane  />\n             </Physics>\n          </Canvas>\n\n        </div>\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}